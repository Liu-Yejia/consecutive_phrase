fun_find_verbs_C_V_CVS_MeCab<-function(material){#此处的material必须为自制函数fun_MeCab的输出（10列矩阵）
  #最基础的几个自制函数
  if(1){
    #临时函数，输入为向量，输出其中非零元素的位置
    fun_0<-function(x){
      return(which(x!=0))
    }
    #输入X为矩阵（带列名），y为向量（其元素为正整数，且均小于等于X的列数）；输出y中元素对应的列名。该函数只向第一参数索取列名，无关其他。
    fun_1<-function(X, y){
      cn<-colnames(x)
      reurn(cn[y])
    }  
  }
  x<-which(material[,2]=="動詞")
  objects_res<-material[x,]
  num_objects<-length(x)
  #生成用来存储结果的矩阵
  #由于MeCab词素解析结果的精度存在不小的问题，此自制函数将输出矩阵由3个减为2个，略去“态”矩阵。
  if(1){
    Conjugates_Matrix<-matrix(0, nrow=num_objects, ncol=7)#活用形矩阵
    types<-c("未然形（口語体）", "未然形（文語体）", "連用形", "終止形", "連体形", "仮定形", "命令形")
    colnames(Conjugates_Matrix)<-types
    rownames(Conjugates_Matrix)<-objects_res[,8]
    #由于MeCab的解析结果并不具有动词的“态”信息，故略去“态”矩阵
    if(0){
      Voices_Matrix<-matrix(0, nrow=num_objects, ncol=7)#态矩阵
      colnames(Voices_Matrix)<-c("能動態", "可能態", "意志態", "使役態", "受動態・自発態・尊敬態", "使役受動態", "交互態")
      rownames(Voices_Matrix)<-objects_res[,8]
    }
    CVS_Matrix<-matrix(0, nrow=num_objects, ncol=4)#“子母サカ”矩阵
    colnames(CVS_Matrix)<-c("子音動詞", "母音動詞", "サ行変格活用動詞", "カ行変格活用動詞")
    rownames(CVS_Matrix)<-object_res[,8]
  }
  #填充<活用形>矩阵
  if(1){
    Conjugates_Matrix[which(objects_res[,7]=="未然ヌ接続"), 1]<-1
    Conjugates_Matrix[which(str_detect(objects_res[,7], "^未然.+$")), 2]<-1
    Conjugates_Matrix[which(objects_res[,7]=="連用タ接続"), 3]<-1
    if(1){
      basic<-which(objects_res[,7]=="基本形")#在由动词词素序列号构成的向量中的序列号
      basic_num<-x[basic]#在全体词素中的序列号
      series_end_form<-basic[sort(union(which(str_detect(material[basic_num+1, 2], "^(記号|助詞)$")), which(material[basic_num+1, 4]=="助動詞語幹")))]
      series_attributive<-setdiff(basic, series_end_form)
    }
    Conjugates_Matrix[series_attributive, 4]<-1
    Conjugates_Matrix[series_end_form, 5]<-1
    Conjugates_Matrix[which(objects_res[,7]=="仮定形"),6]<-1
    Conjugates_Matrix[which(str_detect(objects_res[,7], "^命令.+$")), 7]<-1 
  }
  #填充<子母サカ>矩阵
  if(1){
    CVS_Matrix[str_detect(objects_res[,6], "^一段.*$"), 1]<-1
    CVS_Matrix[str_detect(objects_res[,6], "^五段.*$"), 2]<-1
    CVS_Matrix[str_detect(objects_res[,6], "^サ変.*$"), 3]<-1
    CVS_Matrix[str_detect(objects_res[,6], "^カ変.*$"), 4]<-1
  }
  #list(匹配序列号=x, 活用形=Conjugates_Matrix, 子母サカ=CVS_Matrix)
  基本形=object_res[, 8]
  活用形=types[apply(Conjugates_Matrix, 1, fun_0)]
  匹配序列号=x
  三阶粒度=data.frame(浅层标签="動詞",
                      中层标签=paste("動詞", 活用形, sep="_"),
                      深层标签=paste(基本形, 活用形, sep="_")
  )
  list(匹配序列号=匹配序列号, 三阶粒度=三阶粒度)
}
